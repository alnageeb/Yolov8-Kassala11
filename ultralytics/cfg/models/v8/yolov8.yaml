# Ultralytics YOLO ðŸš€, AGPL-3.0 license
# YOLOv8 object detection model with P3-P5 outputs. For Usage examples see https://docs.ultralytics.com/tasks/detect

# Parameters
nc: 80  # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov8n.yaml' will call yolov8.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [0.33, 0.25, 1024]  # YOLOv8n summary: 225 layers,  3157200 parameters,  3157184 gradients,   8.9 GFLOPs
  s: [0.33, 0.50, 1024]  # YOLOv8s summary: 225 layers, 11166560 parameters, 11166544 gradients,  28.8 GFLOPs
  m: [0.67, 0.75, 768]   # YOLOv8m summary: 295 layers, 25902640 parameters, 25902624 gradients,  79.3 GFLOPs
  l: [1.00, 1.00, 512]   # YOLOv8l summary: 365 layers, 43691520 parameters, 43691504 gradients, 165.7 GFLOPs
  x: [1.00, 1.25, 512]   # YOLOv8x summary: 365 layers, 68229648 parameters, 68229632 gradients, 258.5 GFLOPs

# YOLOv8.0n backbone
backbone:
- [-1, 1, 'ResnetStart', [3, 64, 2]]  # 0
- [[-1, 0], 1, 'ResnetConv', [3, 64, 1]]   # 1 
- [[-1, 1], 1, 'ResnetConv', [3, 64, 1]]   # 2
- [[-1, 2], 1, 'ResnetConv', [3, 64, 1]]   # 3
- [[-1, 3], 1, 'ResnetConv', [3, 128, 2]]  # 4
- [[-1, 4], 1, 'ResnetConv', [3, 128, 1]]  # 5
- [[-1, 5], 1, 'ResnetConv', [3, 128, 1]]  # 6
- [[-1, 6], 1, 'ResnetConv', [3, 128, 1]]  # 7
- [[-1, 7], 1, 'ResnetConv', [3, 256, 2]]  # 8
- [[-1, 8], 1, 'ResnetConv', [3, 256, 1]]  # 9 
- [[-1, 9], 1, 'ResnetConv', [3, 256, 1]]  # 10
- [[-1, 10], 1, 'ResnetConv', [3, 256, 1]]  # 11
- [[-1, 11], 1, 'ResnetConv', [3, 256, 2]]  # 12
- [[-1, 12], 1, 'ResnetConv', [3, 256, 1]]  # 13
- [[-1, 13], 1, 'ResnetConv', [3, 512, 1]]  # 14
- [[-1, 14], 1, 'ResnetConv', [3, 512, 2]]  # 15
- [[-1, 15], 1, 'ResnetConv', [3, 512, 1]]  # 16


# YOLOv8.0n head
# YOLO Head Architecture
head:
  - [-1, 1, nn.Upsample, [None, 2, 'nearest']]  # Upsample to match feature map sizes
  - [[-1, 6], 1, Concat, [1]]  # Concatenate features from backbone P4
  - [-1, 3, C2f, [512]]  # Apply additional convolution (P3/8-small)
  - [-1, 1, nn.Upsample, [None, 2, 'nearest']]  # Upsample to match feature map sizes
  - [[-1, 4], 1, Concat, [1]]  # Concatenate features from backbone P3
  - [-1, 3, C2f, [256]]  # Apply additional convolution (P3/8-small)
  - [-1, 1, Conv, [256, 3, 2]]  # Downsample (P4/16-medium)
  - [[-1, 12], 1, Concat, [1]]  # Concatenate features from head P4
  - [-1, 3, C2f, [512]]  # Apply additional convolution (P4/16-medium)
  - [-1, 1, Conv, [512, 3, 2]]  # Downsample (P5/32-large)
  - [[-1, 9], 1, Concat, [1]]  # Concatenate features from head P5
  - [-1, 3, C2f, [1024]]  # Apply additional convolution (P5/32-large)
  - [[15, 18, 21], 1, Detect, [nc]]  # Detection layer (using features from P3, P4, P5)
